
/*/{Protheus.doc} U_ATUALIZA_INDICADORES_DO_CONTRATO
    Funcao para a gravacao dos indicadores do contrato
/*/
Function U_ATUALIZA_INDICADORES_DO_CONTRATO
    

    //primeiro ponto: verificar qual o programa que esta acionando essa funcao
    if .not. (isInCallStack('U_GCTA002') .or. isInCallStack('U_GCTBM02')) //posicionado na medicao
        Z51->(dbSetOrder(1), dbSeek(Z53->(Z53_FILIAL+Z53_NUMERO)))

        if .not. Z51->(Found())
            return
        endif

    endif

    ATUALIZA_INDICADORES_DO_CONTRATO()

Return

Static Function ATUALIZA_INDICADORES_DO_CONTRATO
    
    Z52->(dbSetOrder(1), dbSeek(Z51->(Z51_FILIAL+Z51_NUMERO)))

    while .not. Z52->(eof()) .and. Z52->(Z52_FILIAL+Z52_NUMERO) == Z51->(Z51_FILIAL+Z51_NUMERO)
        //tenho que atualizar cada um dos campos do contrato

        ATUALIZA_ITEM_DO_CONTRATO()
        Z52->(dbSkip())
    end

    ATUALIZA_CABECALHO_CONTRATO()

Return

Static Function ATUALIZA_ITEM_DO_CONTRATO
    
    local cAliasSQL := getNextAlias()
    local nQuantMed := 0
    local nQtdMed := 0
    local nValorMed := 0

    BeginSQL alias cAliasSQL
        SELECT * FROM %table:Z53% Z53
        WHERE Z53.%notdel%
        AND Z53_FILIAL = %exp:Z52->Z52_FILIAL%
        AND Z53_NUMERO = %exp:Z52->Z52_NUMERO%
        AND Z53_CODPRD = %exp:Z52->Z52_CODPRD%
    EndSql

    (cAliasSQL)->(dbEval({|| nQuantMed += Z53_QTD, nValorMed += Z53_VALOR, nQtdMed++}), dbCloseArea())

    //não precisei indicar a área pq eu coloquei o Z52-> com o agregador de execução () 
    Z52->(reclock(alias(), .F.),; 
        Z52_QTDATU := nQuantMed,; 
        Z52_VLRMED := nValorMed,; 
        Z52_QTDMED := nQtdMed,; 
        Z52_SALDO := Z52_VALOR - Z52_VLRMED,; 
        msunlock())

Return

Static Function ATUALIZA_CABECALHO_CONTRATO
    local cAliasSQL := ''
    local cSQL := ''
    local nQtdMed := 0

    cSQL += " SELECT DISTINCT Z52_FILIAL, Z53_NUMERO, Z53_NUMMED FROM " +retSqlName('Z53') + ' Z53'
    cSQL += CRLF + "WHERE D_E_L_E_T_ = ' ' "
    cSQL += CRLF + "AND Z53_FILIAL = '" + Z51->Z51_FILIAL+"' "
    cSQL += CRLF + "AND Z53_NUMERO = '" +Z51->Z51_NUMERO+"' "

    cAliasSQL := mpSystemOpenQuery(cSQL)
    (cAliasSQL)->(dbEval({|| nQtdMed++ }), dbCloseArea())

    Z51->(reclock(alias(), .f.), Z51_QTDMED := nQtdMed, msunlock())

Return 
